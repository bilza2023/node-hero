<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Player</title>
  <style>
    /* reset margins so our scrollbar shows up on the container */
    body {
      margin: 0;
      padding: 0;
      font-family: sans-serif;
    }
    h1 {
      background: #222;
      color: #fff;
      margin: 0;
      padding: 1rem;
      font-size: 1.25rem;
    }
    /* scrollable deck area */
    #deck-container {
      height: calc(100vh - 3.5rem);
      overflow-y: auto;
      padding: 1rem;
      background: #f5f5f5;
    }
    /* NavBar copied from NavBar.svelte */
    .nav-bar {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(0,0,0,0.7);
      color: white;
      display: flex;
      align-items: center;
      padding: 0.5rem 1rem;
      gap: 0.5rem;
      z-index: 10;
    }
    .nav-bar button {
      border: none;
      border-radius: 6px;
      padding: 0.4rem 0.75rem;
      font-size: 0.9rem;
      background: #333;
      color: white;
      cursor: pointer;
    }
    .nav-bar button:hover {
      background: #555;
    }
    .nav-bar .timer {
      min-width: 90px;
      text-align: center;
    }
    .nav-bar input[type="range"] {
      flex: 1;
    }
  </style>
</head>
<body>
  <h1>Player</h1>

  <!-- NavBar -->
  <div class="nav-bar">
    <button id="back">←</button>
    <button id="play">▶️</button>
    <button id="pause">⏸️</button>
    <button id="stop">⏹️</button>
    <span class="timer">0:00 / 0:00</span>
    <input id="seekbar" type="range" min="0" max="100" value="0" />
  </div>

  <!-- Deck JSON scrolls here -->
  <div id="deck-container">
    <pre><code><%= JSON.stringify(deck, null, 2) %></code></pre>
  </div>

  <!-- Howler UMD build -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.2.3/howler.min.js"></script>
  <!-- Your Player class as ES module -->
  <script type="module" src="/js/Player.js"></script>

  <script type="module">
    import Player from '/js/Player.js';

    const timerEl = document.querySelector('.timer');
    const seekbar = document.getElementById('seekbar');

    // instantiate with your audio file
    const player = new Player('/sounds/music.opus');

    document.getElementById('play').onclick  = () => player.play();
    document.getElementById('pause').onclick = () => player.pause();
    document.getElementById('stop').onclick  = () => {
      player.pause();
      player.sound.seek(0);
    };
    document.getElementById('back').onclick = () => {
      const t = Math.max(0, player.sound.seek() - 5);
      player.sound.seek(t);
    };
    seekbar.oninput = e => {
      const pct = e.target.value / 100;
      player.sound.seek(pct * player.sound.duration());
    };

    // tick loop updates timer & seekbar
    player.onTick(currentTime => {
      const dur = player.sound.duration();
      const fmt = t => {
        const m = Math.floor(t / 60);
        const s = Math.floor(t % 60).toString().padStart(2,'0');
        return `${m}:${s}`;
      };
      timerEl.textContent = `${fmt(currentTime)} / ${fmt(dur)}`;
      seekbar.value = Math.floor((currentTime / dur) * 100);
    });
  </script>
</body>
</html>
